                          OOPS-I

1. 
Main.java


import java.util.Scanner;
public class MainItem {
	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	
	ItemType it = new ItemType();
	System.out.println("enter the item type name: ");
	it.setName(sc.next());
	System.out.println("enter the cost perday: ");
	it.setCostPerDay(sc.nextDouble());
	
	 System.out.println("Enter the deposit: ");
	  
	it.setDeposit(sc.nextDouble());
	it.display();
	
	}
	

}


ItemType.Java


public class ItemType {

    public String name;
    public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getCostPerDay() {
		return costPerDay;
	}
	public void setCostPerDay(double costPerDay) {
		this.costPerDay = costPerDay;
	}
	public double getDeposit() {
		return deposit;
	}
	public void setDeposit(double deposit) {
		this.deposit = deposit;
	}
	double costPerDay;
    double deposit;
    public void display()
    {	
    	  System.out.println("item type name: "+getName());
		  System.out.println("cost per day: "+String.format("%.2f",getCostPerDay()));
	      System.out.println("deposit: "+String.format("%.2f",getDeposit()));
    }
	

}



2.

Customers.java


public class Customers {
    String customername;
String customeremail;
String customertype;
String customeraddress;

public Customers(String customername, String customeremail, String customertype, String customeraddress) {
super();
this.customername = customername;
this.customeremail = customeremail;
this.customertype = customertype;
this.customeraddress = customeraddress;
}

void displayDetails() {
System.out.println("Name:"+customername);
System.out.println("email:"+customeremail);
System.out.println("type:"+customertype);
System.out.println("Location:"+customeraddress);
}

}

Main.java


import java.util.Scanner;

public class Main {

public static void main(String[] args) {

Scanner sc=new Scanner(System.in);

System.out.println("enter the customer details");

System.out.println("enter the name");
String customername=sc.next();
System.out.println("enter te email");
String customeremail=sc.next();
System.out.println("enter the type");
String customertype=sc.next();
System.out.println("enter the location");
String customeraddress=sc.next();
Customers c=new Customers(customername,customeremail,customertype,customeraddress);
c.displayDetails();
}

}


3.

Address.java



import java.util.Objects;
public class Address {
private String street;
private String city;
private Integer pincode;

public Address() {
}

public Address(String street, String city, Integer pincode) {
this.street = street;
this.city = city;
this.pincode = pincode;
}

public String getStreet() {
return street;
}

public void setStreet(String street) {
this.street = street;
}

public String getCity() {
return city;
}

public void setCity(String city) {
this.city = city;
}

public Integer getPincode() {
return pincode;
}

public void setPincode(Integer pincode) {
this.pincode = pincode;
}

@Override
public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null) {
return false;
}
if (getClass() != obj.getClass()) {
return false;
}
Address other = (Address) obj;
return Objects.equals(city, other.city) && Objects.equals(pincode, other.pincode)
&& Objects.equals(street, other.street);
}

@Override
public String toString() {
return street + "," + city + "-" + pincode;
}

}



customer.java



import java.util.Objects;
public class Customer {
private String name;
private Address address;

public Customer() {
}

public Customer(String name, Address address) {
this.name = name;
this.address = address;
}

public String getName() {
return name;
}

public void setName(String name) {
this.name = name;
}

public Address getAddress() {
return address;
}

public void setAddress(Address address) {
this.address = address;
}

@Override
public boolean equals(Object obj) {
if (this == obj) {
return true;
}

if (obj == null) {
return false;
}

if (getClass() != obj.getClass()) {
return false;
}

Customer other = (Customer) obj;
return Objects.equals(name, other.name) && this.address.equals(other.getAddress());
}

@Override
public String toString() {
return "Name:" + name + "\nAddress:" + address.getStreet() + "," + address.getCity() + "-"
+ address.getPincode();
}

}


Main.Java


import java.util.Scanner;

public class Main {
public static void main(String[] args) {
Customer[] customers = null, duplicateCustomers = null;
Customer customer = null;
Address address = null;
int customersCount = 0, i = 0, duplicateCustomersCount = 0;

   Scanner sc = new Scanner(System.in);
customers = new Customer[100];
duplicateCustomers = new Customer[100];

System.out.println("Enter the number of customers");
customersCount = sc.nextInt();

do {
customer = new Customer();
address = new Address();

System.out.printf("Enter the Customer Details %d \n", i + 1);
System.out.println("Enter the name");
customer.setName(sc.next());

System.out.println("Enter the street");
address.setStreet(sc.next());

System.out.println("Enter the city");
address.setCity(sc.next());

System.out.println("Enter the pincode");
address.setPincode(sc.nextInt());

customer.setAddress(address);
customers[i] = customer;
} while (++i < customersCount);

for (i = 0; i < customersCount; i++) {
for (int j = i + 1; j < customersCount; j++) {
if (customers[i].equals(customers[j])) {
duplicateCustomers[duplicateCustomersCount++] = customers[i];
}
}
}

if (duplicateCustomers[0] == null) {
System.out.println("No duplicate details");
} else {
System.out.println("The identical Customers Details:");

for (i = 0; i < duplicateCustomersCount; i++) {
System.out.println((i + 1) + ")" + duplicateCustomers[i]);
}
}
}
}


4.

Address.java


public class Address {
private String street;
private String city;
private int pincode;
public Address() {
super();
// TODO Auto-generated constructor stub
}
public Address(String street, String city, int pincode) {
super();
this.street = street;
this.city = city;
this.pincode = pincode;
}
@Override
public String toString() {
return (street+","+city+"-"+pincode);
}


}


Customer.java


public class Customer {
String name;
Address address;
public Customer() {
super();
// TODO Auto-generated constructor stub
}
public Customer(String name, Address address) {
super();
this.name = name;
this.address = address;
}
@Override
public String toString() {
return (name + address);
}



}


Main.java


import java.util.Scanner;
public class Main {
	public static void main(String[] args) {


		Scanner sc=new Scanner(System.in);
		System.out.println("enter the name");
		String name=sc.next();
		System.out.println("enter the address details");
		
		System.out.println("enter the street");
		String street=sc.next();
		System.out.println("enter the city");
		String city=sc.next();
		System.out.println("enter the pincode");
		int pincode=sc.nextInt();
		Address a=new Address(street,city,pincode);
		Customer c1=new Customer(name,a);
		String customerdetails=c1.toString();
		System.out.println(customerdetails);
		}
}

                     
					  